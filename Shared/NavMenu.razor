@inject AuthenticationStateProvider authenticationStateProvider

<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href="">AgroVeterinariaSoft</a>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <ul class="nav flex-column">
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="RHome">
                <span class="oi oi-plus" aria-hidden="true"></span> Registros
            </NavLink>
        </li>


        <li class="nav-item px-3">
            <NavLink class="nav-link" href="CHome">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Consultas
            </NavLink>
        </li>

        <li class="nav-item px-3">
            @if (authenticationStateProvider.GetAuthenticationStateAsync().Result.User.Identity.IsAuthenticated)
            {
                <NavLink class="nav-link"href="/logout?returnUrl=/" target="_top">
                    <span class="oi oi-person" aria-hidden="true"></span> Logout
                </NavLink>
            }
            else
            {
                <NavLink class="nav-link" href="/LogInPage">
                    <span class="oi oi-person" aria-hidden="true"></span> Login
                </NavLink>
            }

        </li>


    </ul>
</div>

@code {
    private bool collapseNavMenu = true;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
}
