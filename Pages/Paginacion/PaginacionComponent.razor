

<div>

    <nav aria-label="Page navigation example">
        <ul class="pagination">
            @if (Paginas != null)
            {
                <li class="page-item"><a class="page-link" @onclick="AnteriorPagina">Previous</a></li>
                @foreach (var pag in Paginas)
                {
                    if (pag != Paginacion.PaginaActual)
                    {
                        <li class="page-item"><a class="page-link" @onclick="(()=> IrAPagina(pag))">@pag</a></li>
                    }
                    else
                    {
                        <li class="page-item active"><a class="page-link " @onclick="(()=> IrAPagina(pag))">@pag</a></li>
                    }

                }
                <li class="page-item"><a class="page-link" @onclick="SiguientePagina">Next</a></li>
            }

        </ul>
    </nav>

</div>

@code {

    [Parameter]
    public EventCallback Evento { get; set; }

    [Parameter]
    public Paginacion Paginacion { get; set; }

    public List<int> Paginas { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await Task.Run(() => { Iniciarlizar(); });
    }



    private void Iniciarlizar()
    {
        Paginacion = Paginacion;
        CargarListaPaginas();

    }



    private async Task SiguientePagina()
    {
        if ((Paginacion.PaginaActual + 1) <= Paginacion.TotalPaginas)
        {
            Paginacion.PaginaActual++;
            CargarListaPaginas();

            await Evento.InvokeAsync(Paginacion.PaginaActual);
        }

    }

    private async Task AnteriorPagina()
    {
        if ((Paginacion.PaginaActual - 1) >= 1)
        {
            Paginacion.PaginaActual--;
            CargarListaPaginas();
             await Evento.InvokeAsync(Paginacion.PaginaActual);
        }
    }

    private async Task IrAPagina(int i)
    {
        try
        {
            Paginacion.PaginaActual = i;
            CargarListaPaginas();

             await Evento.InvokeAsync(Paginacion.PaginaActual);
        }
        catch (Exception)
        {

            throw;
        }
    }

    private void CargarListaPaginas()
    {

        Paginas = new List<int>();

        for (int i = 1; i <= Paginacion.TotalPaginas; i++)
        {

            if (i >= Paginacion.PaginaActual - Paginacion.Radio && i <= Paginacion.PaginaActual + Paginacion.Radio)
            {
                if (i > 0 && i <= Paginacion.TotalPaginas)
                {
                    Paginas.Add(i);
                }
            }
        }

    }
}
